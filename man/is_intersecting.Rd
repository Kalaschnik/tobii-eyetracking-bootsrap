% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_intersecting.R
\name{is_intersecting}
\alias{is_intersecting}
\title{Check if two rectangles are intersecting each other}
\usage{
is_intersecting(rect1, rect2)
}
\arguments{
\item{rect1, rect2}{A named list with the key names: x_topleft, y_topleft, x_bottomright, y_bottomright}
}
\value{
Returns a logical scalar
}
\description{
Given a list of two rectangles that include coordinates for their corresponding coordinates
(see examples below), this function returns a boolean scalar (either TRUE or FALSE) if
the two rectangles intersect.
}
\details{
This function is part various preflight checks. \strong{It is important that you provide the key names
with the correct names} (i.e., x_topleft, y_topleft, x_bottomright, y_bottomright) for both
rectangles
}
\examples{
is_intersecting(
  list(x_topleft = 10, y_topleft = 10, x_bottomright = 20, y_bottomright = 20),
  list(x_topleft = 15, y_topleft = 15, x_bottomright = 25, y_bottomright = 25)
) # Rectangles are clearly intersecting (⧉) → returns TRUE

is_intersecting(
  list(x_topleft = 10, y_topleft = 10, x_bottomright = 15, y_bottomright = 30),
  list(x_topleft = 15, y_topleft = 10, x_bottomright = 20, y_bottomright = 30)
) # The overlapping x at 15 is problematic (◫) → returns TRUE

is_intersecting(
  list(x_topleft = 10, y_topleft = 10, x_bottomright = 20, y_bottomright = 20),
  list(x_topleft = 21, y_topleft = 10, x_bottomright = 31, y_bottomright = 20)
) # No intersect (◻◻) → returns FALSE
}
\concept{eyewit internal helpers}
