% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_aoilist_intersecting.R
\name{is_aoilist_intersecting}
\alias{is_aoilist_intersecting}
\title{Check if AOIs intersect}
\usage{
is_aoilist_intersecting(aoisets, verbose = FALSE)
}
\arguments{
\item{aoisets}{An AOI object containing arbitrary AOI sets as defined in interface.R}

\item{verbose}{Enable verbose output (defaults to FALSE)}
}
\value{
Returns a logical scalar
}
\description{
The first input is the aoisets list as defined in the interface.R file. The function iterates
over all defined AOI sets and checks if the individual lists are intersecting.
}
\details{
For reporting purposes, this function also requires a \code{column_name} and \code{hit_name} for
identifying the current set and the current AOI. In each iteration the function is calling
\link{is_intersecting}.
}
\examples{
# This example is checking two AOI sets. The first AOI set contains 4 AOIs, the second two.
# Running this set returns FALSE, as all AOIs in each individual list are not overlapping.
# See test-is_aoilist_intersecting for an intersecting example.
aoisets_false <- list(
  aoiset1 = list(
    column_name = "set1",
    aoilist = list(
      aoi1 = list(hit_name = "left", x_topleft = 60, y_topleft = 290, x_bottomright = 690, y_bottomright = 1130),
      aoi2 = list(hit_name = "right", x_topleft = 1225, y_topleft = 290, x_bottomright = 1855, y_bottomright = 1130),
      aoi3 = list(hit_name = "top", x_topleft = 790, y_topleft = 10, x_bottomright = 1130, y_bottomright = 350),
      aoi4 = list(hit_name = "bottom", x_topleft = 790, y_topleft = 730, x_bottomright = 1130, y_bottomright = 1070)
    )
  ),

  aoiset2 = list(
    column_name = "set2",
    aoilist = list(
      aoi1 = list(hit_name = "top", x_topleft = 790, y_topleft = 10, x_bottomright = 1130, y_bottomright = 350),
      aoi2 = list(hit_name = "bottom", x_topleft = 790, y_topleft = 730, x_bottomright = 1130, y_bottomright = 1070)
    )
  )
)
}
\seealso{
Other preflight functions: 
\code{\link{is_intersecting}()}
}
\concept{preflight functions}
